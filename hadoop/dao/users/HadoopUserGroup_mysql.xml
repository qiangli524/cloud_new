<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="HadoopUserGroup">
	<typeAlias alias="HadoopUserGroup" type="domain.users.HadoopUserGroup"/>
	<typeAlias alias="cluObj" type="domain.cluster.HadoopClusterObj"/>
	
	<sql id="paginationEnd">
		<![CDATA[
                     limit #FIRSTROWNUM# , #PAGESIZE#
                 ]]>
	</sql>
	
	<sql id="baseCloumns">
		a.id,a.name,a.description,a.cluster_id
	</sql>
	
	<sql id="baseSql">
		SELECT
			<include refid="baseCloumns"/>,
			b.id service_id,
			b.service_type service_type,
			b.`status`,
			b.deal_type,
			c.`NAME` cluster_name
		FROM
			tb_hadoop_user_group a
		LEFT JOIN tb_hadoop_users_service_relation b ON a.ID = b.entity_id
		LEFT JOIN tb_hadoop_resource_tree c ON a.CLUSTER_ID = c.UUID
		left join tb_hadoop_queue_user_config_relation d on b.id = d.entity_id	
		<dynamic prepend="where">
			<isNotEmpty prepend="and" property="id">
				a.ID = #id#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="name">
				a.`NAME` like CONCAT('%',#name#,'%')
			</isNotEmpty>
			<isNotEmpty prepend="and" property="description">
				a.description like CONCAT('%',#description#,'%')
			</isNotEmpty>
			<isNotEmpty prepend="and" property="cluster_id">
				c.UUID = #cluster_id#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="service_type">
				b.service_type = #service_type#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="typeList">
				b.service_type in
				<iterate close=")" conjunction="," open="(" property="typeList">
					#typeList[]#
				</iterate>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="deal_type">
				b.deal_type = #deal_type#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="entity_type">
				b.entity_type = #entity_type#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="status">
				b.`status` = #status#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="queue_entity_type">
				d.entity_type = #queue_entity_type#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="queue_id">
				d.queue_id = #queue_id#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="entity_id">
				d.entity_id = #entity_id#
			</isNotEmpty>
		</dynamic>
	</sql>
	
	<select id="queryForListByObj" parameterClass="HadoopUserGroup" resultClass="HadoopUserGroup">
		<include refid="baseSql"/>
		<isGreaterThan property="PAGESIZE" compareValue="0">
			<include refid="paginationEnd" />
		</isGreaterThan>
	</select>
	
	<select id="queryForCount" parameterClass="HadoopUserGroup" resultClass="int">
		select count(d.ID) from (
			<include refid="baseSql"/>
		) d
	</select>
	
	<select id="queryForClusterList" parameterClass="HadoopUserGroup" resultClass="cluObj">
		select d.cluster_name cluster_name,d.cluster_id cluster_id from (
			<include refid="baseSql"/>
		) d GROUP BY d.cluster_id
	</select>
	
	<select id="queryWholeClusterList" parameterClass="HadoopUserGroup" resultClass="cluObj">
		select `NAME` cluster_name,UUID cluster_id from tb_hadoop_resource_tree where node_type = 1
	</select>
	
	<insert id="insertByObj" parameterClass="HadoopUserGroup">
		insert into tb_hadoop_user_group(id,name,description,cluster_id)
		values(#id#,#name#,#description#,#cluster_id#)
	</insert>
	
	<sql id="queryConnectUseGroupListBase">
		SELECT
			<include refid="baseCloumns"/>,
			b.id service_id,
			b.service_type service_type,
			b.`status`,
			b.deal_type,
			c.`NAME` cluster_name
		FROM
			tb_hadoop_user_group a
		LEFT JOIN (
			SELECT b.id, b.entity_id, b.service_type, b.entity_type, b.`status`, b.deal_type 
			FROM tb_hadoop_queue_user_config_relation a RIGHT JOIN tb_hadoop_users_service_relation b ON 
			a.entity_id = b.id WHERE a.entity_id IS NULL) b ON a.ID = b.entity_id
		LEFT JOIN tb_hadoop_resource_tree c ON a.CLUSTER_ID = c.UUID
		<dynamic prepend="where">
			<isNotEmpty prepend="and" property="deal_type">
				b.deal_type = #deal_type#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="status">
				b.`status` = #status#
			</isNotEmpty>
		</dynamic>
	</sql>
	<select id="queryConnectUseGroupList" parameterClass="HadoopUserGroup" resultClass="HadoopUserGroup">
		<include refid="queryConnectUseGroupListBase"/>
		<isGreaterThan property="PAGESIZE" compareValue="0">
			<include refid="paginationEnd" />
		</isGreaterThan>
	</select>
	
	<select id="queryConnectUseGroupListCount" parameterClass="HadoopUserGroup" resultClass="int">
		select count(*) from (
			<include refid="queryConnectUseGroupListBase"/>
		) d
	</select>
	
		<select id="queryForList" parameterClass="HadoopUserGroup" resultClass="HadoopUserGroup">
		select id,name,description,cluster_id from tb_hadoop_user_group
		<dynamic prepend="where">
			<isNotEmpty prepend="and" property="id">
				id = #id#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="name">
				name like CONCAT('%',#name#,'%')
			</isNotEmpty>
			<isNotEmpty prepend="and" property="description">
				description like CONCAT('%',#description#,'%')
			</isNotEmpty>
			<isNotEmpty prepend="and" property="cluster_id">
				cluster_id = #cluster_id#
			</isNotEmpty>
		</dynamic>
	</select>
	
	<select id="queryForSystemUser" parameterClass="HadoopUserGroup" resultClass="HadoopUserGroup">
		SELECT
			a.USERNAME systemUserName,
			a.`PASSWORD` password,
			a.IP 
		FROM
			tb_user_manage a
		INNER JOIN (
			SELECT
				b.ip
			FROM
				tb_hadoop_service_node a
			INNER JOIN tb_hadoop_host_info b ON a.HOST_ID = b.ID
			where a.status = 0
			<dynamic>
				<isNotEmpty prepend="and" property="cluster_id">
					a.CLUSTER_ID = #cluster_id#
				</isNotEmpty>
				<isNotEmpty prepend="and" property="service_type">
					a.SERVICE_TYPE = #service_type#
				</isNotEmpty>
			</dynamic>
		) b ON a.ip = b.ip
		<dynamic prepend="where">
			<isNotEmpty property="entity_type" prepend="and">
				a.type = #entity_type#
			</isNotEmpty>
			<isNotEmpty property="purpose" prepend="and">
				a.purpose = #purpose#
			</isNotEmpty>
		</dynamic>
	</select>
	
	
</sqlMap>