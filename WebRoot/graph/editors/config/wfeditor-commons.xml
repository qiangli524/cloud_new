
<mxEditor defaultGroup="group" defaultEdge="edge"
          helpWindowImage="images/help.gif"
          tasksWindowImage="images/tasks.gif"
          forcedInserting="0"
          swimlaneRequired="0">
    <include name="config/editor-commons.xml"/>
    <add as="onInit">
        function (){
        //this.showTasks();
        }
    </add>
    <Array as="cycleAttributeValues">
        <add value="#0E79C7"/>
        <!--<add value="#83027F"/>
        <add value="#66B922"/>
        <add value="#808913"/>
        <add value="#CF0056"/>
        <add value="#4679B6"/>-->
    </Array>
    <Array as="templates">
        <add as="group">
            <Group label="" description="" href="">
                <mxCell vertex="1" style="group" connectable="1"/>
            </Group>
        </add>
        <add as="edge">
            <Edge label="" description="">
                <mxCell edge="1">
                    <mxGeometry as="geometry" relative="1"/>
                </mxCell>
            </Edge>
        </add>
        <add as="swimlaneH">
            <Swimlane label="Horizontal Swimlane" description="" href="">
                <mxCell vertex="1" style="swimlane;horizontal=0" connectable="1">
                    <mxGeometry as="geometry" width="300" height="200"/>
                </mxCell>
            </Swimlane>
        </add>
        <add as="swimlaneV">
            <Swimlane label="Vertically Swimlane" description="" href="">
                <mxCell vertex="1" style="swimlane;horizontal=1" connectable="1">
                    <mxGeometry as="geometry" width="200" height="300"/>
                </mxCell>
            </Swimlane>
        </add>
        <add as="task">
            <Task label="Task" description="" href="">
                <mxCell vertex="1" style="fillColor=gray;gradientColor=white">
                    <mxGeometry as="geometry" width="72" height="32"/>
                </mxCell>
            </Task>
        </add>
        <add as="subprocess">
            <Subprocess label="Subprocess" description="" href="">
                <mxCell vertex="1" style="rounded">
                    <mxGeometry as="geometry" width="72" height="32"/>
                </mxCell>
            </Subprocess>
        </add>
        <add as="shape">
            <Shape label="" description="" href="">
                <mxCell vertex="1" style="ellipse">
                    <mxGeometry as="geometry" width="32" height="32"/>
                </mxCell>
            </Shape>
        </add>
        <add as="symbol">
            <Symbol label="Symbol" description="" href="">
                <mxCell vertex="1" style="symbol;image=images/symbols/event.png">
                    <mxGeometry as="geometry" width="32" height="32"/>
                </mxCell>
            </Symbol>
        </add>
        <add as="text">
            <Text label="Text" description="" href="">
                <mxCell vertex="1" style="text" connectable="0">
                    <mxGeometry as="geometry" width="72" height="32"/>
                </mxCell>
            </Text>
        </add>
        <add as="VMware">
            <Node label="虚拟机(VMware)" data-type="VMware" description="" href="">
                <mxCell vertex="1" style="symbol;image=images/cloud/VMware.gray.png">
                    <mxGeometry as="geometry" width="64" height="64"/>
                </mxCell>
            </Node>
        </add>
        <add as="PowerVM">
            <Node label="虚拟机(PowerVM)" data-type="PowerVM" description="" href="">
                <mxCell vertex="1" style="symbol;image=images/cloud/PowerVM.gray.png">
                    <mxGeometry as="geometry" width="64" height="64"/>
                </mxCell>
            </Node>
        </add>
        <add as="X86Computer">
            <Node label="X86物理机" data-type="X86Computer" description="" href="">
                <mxCell vertex="1" style="symbol;image=images/cloud/X86Computer.gray.png">
                    <mxGeometry as="geometry" width="64" height="64"/>
                </mxCell>
            </Node>
        </add>
        <add as="MiniComputer">
            <Node label="小型机" data-type="MiniComputer" description="" href="">
                <mxCell vertex="1" style="symbol;image=images/cloud/MiniComputer.png">
                    <mxGeometry as="geometry" width="64" height="64"/>
                </mxCell>
            </Node>
        </add>
        <add as="DFStorage">
            <Node label="分布式文件存储" data-type="DFStorage" description="" href="">
                <mxCell vertex="1" style="symbol;image=images/cloud/DFStorage.gray.png">
                    <mxGeometry as="geometry" width="64" height="64"/>
                </mxCell>
            </Node>
        </add>
        <add as="FCSANStorage">
            <Node label="FC-SAN存储" data-type="FCSANStorage" description="" href="">
                <mxCell vertex="1" style="symbol;image=images/cloud/FCSANStorage.gray.png">
                    <mxGeometry as="geometry" width="64" height="64"/>
                </mxCell>
            </Node>
        </add>
        <add as="NUStorage">
            <Node label="非通用存储" data-type="NUStorage" description="" href="">
                <mxCell vertex="1" style="symbol;image=images/cloud/NUStorage.gray.png">
                    <mxGeometry as="geometry" width="64" height="64"/>
                </mxCell>
            </Node>
        </add>
		 <add as="Terminal">
            <Node label="维护终端" data-type="Terminal" description="" href="">
                <mxCell vertex="1" style="symbol;image=images/workplace.png">
                    <mxGeometry as="geometry" width="64" height="64"/>
                </mxCell>
            </Node>
        </add>
		 <add as="Cluster">
            <Node label="集群" data-type="Cluster" description="" href="">
                <mxCell vertex="1" style="symbol;image=images/cloud/cluster.png">
                    <mxGeometry as="geometry" width="64" height="64"/>
                </mxCell>
            </Node>
        </add>
		 <add as="Cloud">
            <Node label="云" data-type="Cloud" description="" href="">
                <mxCell vertex="1" style="symbol;image=images/cloud/cloud.png">
                    <mxGeometry as="geometry" width="64" height="64"/>
                </mxCell>
            </Node>
        </add>
        <!-- 
		<add as="MiniGif">
            <Node label="小型机" data-type="MiniGif" description="" href="">
                <mxCell vertex="1" style="symbol;image=images/cloud/MiniComputer.png">
                    <mxGeometry as="geometry" width="64" height="64"/>
                </mxCell>
            </Node>
        </add>
		<add as="ClusterGif">
            <Node label="集群" data-type="ClusterGif" description="" href="">
                <mxCell vertex="1" style="symbol;image=images/cloud/cluster.png">
                    <mxGeometry as="geometry" width="64" height="64"/>
                </mxCell>
            </Node>
        </add>
         -->
         <!-- 20130308 10:39 -->
         <add as="XenHost">
            <Node label="Xcp宿主机" data-type="XenHost" description="" href="">
                <mxCell vertex="1" style="symbol;image=images/topo/Host.png">
                    <mxGeometry as="geometry" width="64" height="64"/>
                </mxCell>
            </Node>
        </add>
         <add as="XenVM">
            <Node label="Xcp虚拟机" data-type="XenVM" description="" href="">
                <mxCell vertex="1" style="symbol;image=images/cloud/X86Computer.png">
                    <mxGeometry as="geometry" width="64" height="64"/>
                </mxCell>
            </Node>
        </add>
        <add as="XenVMOff">
            <Node label="Xcp虚拟机未启动" data-type="XenVMOff" description="" href="">
                <mxCell vertex="1" style="symbol;image=images/cloud/X86Computer.gray.png">
                    <mxGeometry as="geometry" width="64" height="64"/>
                </mxCell>
            </Node>
        </add>
        <!-- 20130308 10:39 -->
        <add as="Firewall">
            <Node label="防火墙" data-type="Firewall" description="" href="">
                <mxCell vertex="1" style="symbol;image=images/cloud/Firewall.png">
                    <mxGeometry as="geometry" width="64" height="64"/>
                </mxCell>
            </Node>
        </add>
        <add as="LoadBalancer">
            <Node label="负载均衡器" data-type="LoadBalancer" description="" href="">
                <mxCell vertex="1" style="symbol;image=images/cloud/LoadBalancer.gray.png">
                    <mxGeometry as="geometry" width="64" height="64"/>
                </mxCell>
            </Node>
        </add>
        <add as="Router">
            <Node label="路由器" data-type="Router" description="" href="">
                <mxCell vertex="1" style="symbol;image=images/cloud/Router.png">
                    <mxGeometry as="geometry" width="64" height="64"/>
                </mxCell>
            </Node>
        </add>
        <add as="Switch">
            <Node label="虚拟交换机" data-type="Switch" description="" href="">
                <mxCell vertex="1" style="symbol;image=images/topo/Switch.png">
                    <mxGeometry as="geometry" width="64" height="64"/>
                </mxCell>
            </Node>
        </add>
        <!-- 20130308 10:39 -->
         <add as="VSwitch">
            <Node label="交换机" data-type="VSwitch" description="" href="">
                <mxCell vertex="1" style="symbol;image=images/topo/Switch.png">
                    <mxGeometry as="geometry" width="64" height="64"/>
                </mxCell>
            </Node>
        </add>
        <add as="XenStorage">
            <Node label="存储" data-type="XenStorage" description="" href="">
                <mxCell vertex="1" style="symbol;image=images/topo/Storage.png">
                    <mxGeometry as="geometry" width="64" height="64"/>
                </mxCell>
            </Node>
        </add>
        <!-- 20130308 10:39 -->
        <add as="Backup">
            <Node label="备份资源" data-type="Backup" description="" href="">
                <mxCell vertex="1" style="symbol;image=images/cloud/Backup.gray.png">
                    <mxGeometry as="geometry" width="64" height="64"/>
                </mxCell>
            </Node>
        </add>
        <add as="CRM">
            <Node label="CRM" data-type="CRM" description="" href="">
                <mxCell vertex="1" style="symbol;image=images/system/CRM.png">
                    <mxGeometry as="geometry" width="64" height="64"/>
                </mxCell>
            </Node>
        </add>
        <add as="KeBao">
            <Node label="KeBao" data-type="KeBao" description="" href="">
                <mxCell vertex="1" style="symbol;image=images/system/KeBao.png">
                    <mxGeometry as="geometry" width="64" height="64"/>
                </mxCell>
            </Node>
        </add>
        <add as="EAI">
            <Node label="EAI" data-type="EAI" description="" href="">
                <mxCell vertex="1" style="symbol;image=images/system/EAI.png">
                    <mxGeometry as="geometry" width="64" height="64"/>
                </mxCell>
            </Node>
        </add>
        <add as="ZongZi">
            <Node label="ZongZi" data-type="ZongZi" description="" href="">
                <mxCell vertex="1" style="symbol;image=images/system/ZongZi.png">
                    <mxGeometry as="geometry" width="64" height="64"/>
                </mxCell>
            </Node>
        </add>
        <add as="Database">
            <Node label="Database" data-type="Database" description="" href="">
                <mxCell vertex="1" style="symbol;image=images/topo/Database.png">
                    <mxGeometry as="geometry" width="64" height="64"/>
                </mxCell>
            </Node>
        </add>
    </Array>
    <add as="createTasks"><![CDATA[
		function (div){
			var off = 30;
			if (this.graph != null){
				var layer = this.graph.model.root.getChildAt(0);
				mxUtils.para(div,  mxResources.get('examples'));
				mxUtils.linkInvoke(div, mxResources.get('newDiagram'), this,
					'open', 'diagrams/empty.xml', off);
				mxUtils.br(div);
				mxUtils.linkInvoke(div, mxResources.get('swimlanes'), this,
					'open', 'diagrams/swimlanes.xml', off);
				mxUtils.br(div);
				mxUtils.linkInvoke(div, mxResources.get('travelBooking'), this,
					'open', 'diagrams/travel-booking.xml', off);
				mxUtils.br(div);
				if (!this.graph.isSelectionEmpty()){
					var cell = this.graph.getSelectionCell();
					if (this.graph.getSelectionCount() == 1 &&
						(this.graph.model.isVertex(cell) &&
						cell.getEdgeCount() > 0) || this.graph.isSwimlane(cell)){
						mxUtils.para(div, 'Layout');
						mxUtils.linkAction(div, mxResources.get('verticalTree'),
							this, 'verticalTree', off);
						mxUtils.br(div);
						mxUtils.linkAction(div, mxResources.get('horizontalTree'),
							this, 'horizontalTree', off);
						mxUtils.br(div);
					}
					mxUtils.para(div, 'Format');
					if (mxUtils.isNode(cell.value, 'Symbol')){
						mxUtils.linkAction(div, mxResources.get('image'),
							this, 'image', off);
						mxUtils.br(div);
					}else{
						mxUtils.linkAction(div, mxResources.get('opacity'),
							this, 'opacity', off);
						mxUtils.br(div);
						if (this.graph.model.isVertex(cell) || (cell.style != null && cell.style.indexOf("arrowEdge") >= 0)){
							mxUtils.linkAction(div, mxResources.get('gradientColor'),
								this, 'gradientColor', off);
							mxUtils.br(div);
						}
						if (this.graph.model.isEdge(cell)){
							mxUtils.linkAction(div, 'Straight Connector', this, 'straightConnector', off);
							mxUtils.br(div);
							mxUtils.linkAction(div, 'Elbow Connector', this, 'elbowConnector', off);
							mxUtils.br(div);
							mxUtils.linkAction(div, 'Arrow Connector', this, 'arrowConnector', off);
							mxUtils.br(div);
						}
					}
					mxUtils.linkAction(div, 'Rounded', this, 'toggleRounded', off);
					mxUtils.br(div);
					if (this.graph.isSwimlane(cell) || this.graph.model.isEdge(cell)){
						mxUtils.linkAction(div, 'Orientation', this, 'toggleOrientation', off);
						mxUtils.br(div);
					}
					if (this.graph.getSelectionCount() > 1){
						mxUtils.para(div, mxResources.get('align'));
						mxUtils.linkAction(div, mxResources.get('left'),
							this, 'alignCellsLeft', off);
						mxUtils.br(div);
						mxUtils.linkAction(div, mxResources.get('center'),
							this, 'alignCellsCenter', off);
						mxUtils.br(div);
						mxUtils.linkAction(div, mxResources.get('right'),
							this, 'alignCellsRight', off);
						mxUtils.br(div);
						mxUtils.linkAction(div, mxResources.get('top'),
							this, 'alignCellsTop', off);
						mxUtils.br(div);
						mxUtils.linkAction(div, mxResources.get('middle'),
							this, 'alignCellsMiddle', off);
						mxUtils.br(div);
						mxUtils.linkAction(div, mxResources.get('bottom'),
							this, 'alignCellsBottom', off);
						mxUtils.br(div);
					}
					mxUtils.para(div, mxResources.get('selection'));
					mxUtils.linkAction(div, mxResources.get('clearSelection'),
						this, 'selectNone', off);
					mxUtils.br(div);
				}else if (layer.getChildCount() > 0){
					mxUtils.para(div, mxResources.get('selection'));
					mxUtils.linkAction(div, mxResources.get('selectAll'),
						this, 'selectAll', off);
					mxUtils.br(div);
				}
				mxUtils.br(div);
			}
		}
	]]>
    </add>
</mxEditor>
