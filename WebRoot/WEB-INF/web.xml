<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">
	<display-name>cloud</display-name>
	
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- Logout需配置在Login前 -->
	<listener>  
    	<listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>  
	</listener>   
	<filter>  
	   <filter-name>CAS Single Sign Out Filter</filter-name>  
	   <filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>  
	</filter>  
	<filter-mapping>  
	   <filter-name>CAS Single Sign Out Filter</filter-name>  
	   <url-pattern>/*</url-pattern>  
	</filter-mapping>
	
	<!-- 服务管理 -->
<!-- 	<servlet> -->
<!-- 		<servlet-name>ibmdispatcher</servlet-name> -->
<!-- 		<servlet-class> -->
<!-- 			org.springframework.web.servlet.DispatcherServlet -->
<!-- 		</servlet-class> -->
<!-- 		<init-param> -->
<!-- 			<param-name>contextConfigLocation</param-name> -->
<!-- 			<param-value> -->
<!-- 				/WEB-INF/classes/com/sitech/basd/config/spring3/sitech-rest.xml -->
<!-- 			</param-value> -->
<!-- 		</init-param> -->
<!-- 		<load-on-startup>1</load-on-startup> -->
<!-- 	</servlet> -->
<!-- 	<servlet-mapping> -->
<!-- 		<servlet-name>ibmdispatcher</servlet-name> -->
<!-- 		<url-pattern>*.rest</url-pattern> -->
<!-- 	</servlet-mapping> -->
	<!-- 服务管理 end 
	<filter>
		<filter-name>CAS Authentication Filter</filter-name>
		<filter-class>
			com.sitech.cas.client.filter.AuthenticationFilter
		</filter-class>
		<init-param>
			<param-name>casServerLoginUrl</param-name>
			<param-value>
				http://10.191.143.5:8082/cas_sso/login
			</param-value>
		</init-param>
		<init-param>
			<param-name>renew</param-name>
			<param-value>false</param-value>
		</init-param>
		<init-param>
			<param-name>gateway</param-name>
			<param-value>false</param-value>
		</init-param>
		<init-param>
			<param-name>serverName</param-name>
			<param-value>http://10.191.143.5:8080</param-value>
		</init-param>
	</filter>
	<filter>
		<filter-name>CAS Validation Filter</filter-name>
		<filter-class>
			com.sitech.cas.client.filter.ValidationFilter
		</filter-class>
		<init-param>
			<param-name>casServerUrlPrefix</param-name>
			<param-value>http://10.191.143.5:8082/cas_sso</param-value>
		</init-param>
		<init-param>
			<param-name>serverName</param-name>
			<param-value>http://10.191.143.5:8080</param-value>
		</init-param>
		<init-param>
			<param-name>useSession</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>redirectAfterValidation</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter>
		<filter-name>CAS HttpServletRequest WrapperFilter</filter-name>
		<filter-class>
			com.sitech.cas.client.filter.HttpServletRequestWrapperFilter
		</filter-class>
	</filter>
	-->
    <!-- BOMC -->
	<!-- CAS Filters 
	<filter>
		<filter-name>CAS Filter</filter-name>
		<filter-class>com.linkage.toptea.cas.filter.CASFilter</filter-class>
		<init-param>
			<param-name>edu.yale.its.tp.cas.client.filter.loginUrl</param-name>
			<param-value>http://bomc.ah.amcc/cas/login</param-value>
		</init-param>
		<init-param>
			<param-name>edu.yale.its.tp.cas.client.filter.validateUrl</param-name>
			<param-value>http://bomc.ah.amcc/cas/proxyValidate</param-value>
		</init-param>
		<init-param>
			<param-name>edu.yale.its.tp.cas.client.filter.serverName</param-name>
			<param-value>bomc.ah.amcc</param-value>
		</init-param>
	</filter>
		<filter-mapping>
			<filter-name>CAS Filter</filter-name>
			<url-pattern>*.jsp</url-pattern>
		</filter-mapping>
		-->
<!-- CAS Filters end-->
	<!-- 直接访问url拦截 -->

	  <filter>  
	    <filter-name>FilterURL</filter-name>  
	    <filter-class>com.sitech.basd.filter.FilterURL</filter-class>  
	  </filter>  
	  <filter-mapping>  
	    <filter-name>FilterURL</filter-name>  
	    <url-pattern>*.jsp</url-pattern>    
	  </filter-mapping> 

    <!-- 特殊字符过滤 -->
 	<filter>
		<display-name>XssFilter</display-name>
		<filter-name>XssFilter</filter-name>
		<filter-class>
			com.sitech.basd.filter.XssFilter
		</filter-class>
	</filter>
 	<filter-mapping>
		<filter-name>XssFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!--  
		该过滤器使得开发者可以通过org.jasig.cas.client.util.AssertionHolder来获取用户的登录名。  
		比如AssertionHolder.getAssertion().getPrincipal().getName()。
	<filter>
		<filter-name>CAS Assertion Thread Local Filter</filter-name>
		<filter-class>
			com.sitech.cas.client.filter.AssertionThreadLocalFilter
		</filter-class>
	</filter>
	<filter>
		<display-name>SecurityGateWayFilter</display-name>
		<filter-name>SecurityGateWayFilter</filter-name>
		<filter-class>
			com.sitech.basd.sxcloud.rsmu.web.util.filter.SecurityGateWayFilter
		</filter-class>
	</filter>
 	
	<filter-mapping>
		<filter-name>CAS Authentication Filter</filter-name>
		<url-pattern>/index.jsp</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>CAS Authentication Filter</filter-name>
		<url-pattern>/login_login.do</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>CAS Validation Filter</filter-name>
		<url-pattern>/index.jsp</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>CAS Validation Filter</filter-name>
		<url-pattern>/login_login.do</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>CAS HttpServletRequest WrapperFilter</filter-name>
		<url-pattern>/index.jsp</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>CAS HttpServletRequest WrapperFilter</filter-name>
		<url-pattern>/login_login.do</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>CAS Assertion Thread Local Filter</filter-name>
		<url-pattern>/index.jsp</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>CAS Assertion Thread Local Filter</filter-name>
		<url-pattern>/login_login.do</url-pattern>
	</filter-mapping>
	-->
	
 	<filter>
		<display-name>SecurityGateWayFilter</display-name>
		<filter-name>SecurityGateWayFilter</filter-name>
		<filter-class>
			com.sitech.basd.sxcloud.rsmu.web.util.filter.SecurityGateWayFilter
		</filter-class>
	</filter> 
 	<filter-mapping>
		<filter-name>SecurityGateWayFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!--  
		<filter>  
		<filter-name>struts2</filter-name>  
		<filter-class>  
		org.apache.struts2.dispatcher.FilterDispatcher  
		</filter-class>  
		</filter> 
		<filter>
		<filter-name>struts-prepare</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareFilter</filter-class>
		
		<init-param>
		<param-name>config</param-name>
		<param-value>struts-default.xml,struts-plugin.xml,struts.xml</param-value>
		</init-param>
		</filter>
		
		<filter>
		<filter-name>struts-execute</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsExecuteFilter</filter-class>
		
		<init-param>
		<param-name>config</param-name>
		<param-value>struts-default.xml,struts-plugin.xml,struts.xml</param-value>
		</init-param>        
		</filter>
		
		<filter-mapping>
		<filter-name>struts-prepare</filter-name>
		<url-pattern>/*</url-pattern>
		</filter-mapping>
		
		<filter-mapping>
		<filter-name>struts-execute</filter-name>
		<url-pattern>/*</url-pattern>
		</filter-mapping>
	-->

	<security-constraint>
		<web-resource-collection>
			<url-pattern>/*</url-pattern>
			<http-method>PUT</http-method>
			<http-method>DELETE</http-method>
			<http-method>HEAD</http-method>
			<http-method>OPTIONS</http-method>
			<http-method>TRACE</http-method>
		</web-resource-collection>
		<auth-constraint>
		</auth-constraint>
	</security-constraint>
	<login-config>
		<auth-method>BASIC</auth-method>
	</login-config>  
	
	<!-- flex调用spring配置 -->
	<servlet>
		<servlet-name>spring-flex</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/classes/spring/app-config-flex.xml</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>spring-flex</servlet-name>
		<url-pattern>/messagebroker/*</url-pattern>
	</servlet-mapping>
	
	<listener>
		<listener-class>flex.messaging.HttpFlexSession</listener-class>
	</listener>
	
	<servlet>
		<servlet-name>DisplayChart</servlet-name>
		<servlet-class>org.jfree.chart.servlet.DisplayChart</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>DisplayChart</servlet-name>
		<url-pattern>/DisplayChart</url-pattern>
	</servlet-mapping>
	
	<!-- 用户Session拦截器 -->
	<filter>
		<filter-name>UserSessionFilter</filter-name>
		<filter-class>
			com.sitech.basd.util.session.UserSessionFilter
		</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>UserSessionFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<context-param> 
        <param-name>contextConfigLocation</param-name>  
        <param-value>/WEB-INF/classes/spring/app-config.xml</param-value> 
    </context-param> 
    
	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>

	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>
			org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter
		</filter-class>

		<init-param>
			<param-name>config</param-name>
			<param-value>
				struts-default.xml,struts-plugin.xml,struts.xml,
			</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<session-config>
		<session-timeout>90</session-timeout>
	</session-config>

	<!-- WebService -->
	<servlet>
		<servlet-name>CXFService</servlet-name>
		<servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>CXFService</servlet-name>
		<url-pattern>/WebService/*</url-pattern>
	</servlet-mapping>
	
	<!-- WebService -->
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>
	
	<error-page>
    	<error-code>500</error-code>
   		<location>/yicloud/vmman/exception.jsp</location>
	</error-page>
</web-app>